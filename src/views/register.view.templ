package views

import (
	"github.com/kylerequez/go-user-settings-example/src/models"
	"github.com/kylerequez/go-user-settings-example/src/utils"
	"github.com/kylerequez/go-user-settings-example/src/views/layouts"
)

func DisplayRegisterFormValue(form *models.RegisterFormData, name string) string {
	if form == nil {
		return ""
	}
	switch name {
	case "name":
		return form.Name
	case "email":
		return form.Email
	case "password":
		return form.Password
	case "confirmPassword":
		return form.ConfirmPassword
	}
	return ""
}

templ Register(
	info models.AppInfo,
	form *models.RegisterFormData,
	msg *models.AppMessages,
) {
	@layouts.MainLayout(info) {
		<div hx-boost="true" class="flex flex-col h-screen w-screen items-center justify-center">
			<div
				class="flex flex-col border-2 border-white rounded text-white space-y-5 py-20 w-[40%] items-center justify-center"
			>
				<div>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						class="size-40"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z"
						></path>
					</svg>
				</div>
				<div class="text-lg font-bold">
					Users Systems Register
				</div>
				@RegisterForm(form, msg)
			</div>
		</div>
	}
}

templ RegisterForm(
	form *models.RegisterFormData,
	msg *models.AppMessages,
) {
	<form id="reg-form" class="w-[60%]" hx-post="/api/v1/auth/register" hx-target="#reg-form" hx-swap="outerHTML">
		<div class="flex flex-col space-y-6">
			<div class="flex flex-col w-full space-y-2">
				<label for="name" class="ml-2 font-semibold">Name</label>
				<input
					id="name"
					name="name"
					type="text"
					value={ DisplayRegisterFormValue(form, "name") }
					class="bg-black border h-[30px] w-full p-4 border-white rounded"
				/>
				if msg != nil && msg.Errors["reg-form-name-err"] != "" {
					<span class="font-semibold text-red-700">{ utils.DisplayMessage(msg.Errors["reg-form-name-err"]) }</span>
				}
			</div>
			<div class="flex flex-col w-full space-y-2">
				<label for="email" class="ml-2 font-semibold">Email</label>
				<input
					id="email"
					name="email"
					type="email"
					value={ DisplayRegisterFormValue(form, "email") }
					class="bg-black border h-[30px] w-full p-4 border-white rounded"
				/>
				if msg != nil && msg.Errors["reg-form-email-err"] != "" {
					<span class="font-semibold text-red-700">{ utils.DisplayMessage(msg.Errors["reg-form-email-err"]) }</span>
				}
			</div>
			<div class="flex flex-col w-full space-y-2">
				<label for="password" class="ml-2 font-semibold">Password</label>
				<input
					for="password"
					name="password"
					type="password"
					value={ DisplayRegisterFormValue(form, "password") }
					class="bg-black border h-[30px] w-full p-4 border-white rounded"
				/>
				if msg != nil && msg.Errors["reg-form-password-err"] != "" {
					<span class="font-semibold text-red-700">{ utils.DisplayMessage(msg.Errors["reg-form-password-err"]) }</span>
				}
			</div>
			<div class="flex flex-col w-full space-y-2">
				<label for="confirmPassword" class="ml-2 font-semibold">Confirm Password</label>
				<input
					for="confirmPassword"
					name="confirmPassword"
					type="password"
					value={ DisplayRegisterFormValue(form, "confirmPassword") }
					class="bg-black border h-[30px] w-full p-4 border-white rounded"
				/>
				if msg != nil && msg.Errors["reg-form-confirm-password-err"] != "" {
					<span class="font-semibold text-red-700">
						{ utils.DisplayMessage(msg.Errors["reg-form-confirm-password-err"]) }
					</span>
				}
			</div>
			if msg != nil && msg.Errors["reg-form-err"] != "" {
				<span class="font-semibold text-red-700">
					{ utils.DisplayMessage(msg.Errors["reg-form-err"]) }
				</span>
			}
			<div class="flex flex-col items-center">
				<button
					type="submit"
					class="border border-white rounded 
					bg-black text-white font-semibold
					hover:bg-white hover:text-black
					px-4 py-2 w-[30%]"
				>
					Register
				</button>
				if msg != nil && msg.Message != nil {
					<span class="font-semibold text-green-700">
						{ utils.DisplayMessage(*msg.Message) }
					</span>
				}
			</div>
		</div>
	</form>
}
